// üìÅ app.js ‚Äî –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ WebApp

// üõ† –ò–º–ø–æ—Ä—Ç –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π API –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Supabase
import {
  getBooks,
  addBook,
  uploadExport,
  exportBooks,
  updateBook,
  deleteBook,
  saveComment,
  checkAndInsertLibraryBook,
  deleteImageFromStorage,
  uploadCover,
  searchBooks,
  deleteCommentImage,
  uploadCommentImage
} from './api.js';

// ‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è WebApp Telegram (–∏ –¥–µ–º–æ-—Ä–µ–∂–∏–º –ª–æ–∫–∞–ª—å–Ω–æ)
const tg = window.Telegram?.WebApp;
let userId;

if (tg && tg.initDataUnsafe?.user?.id) {
  tg.ready();
  userId = tg.initDataUnsafe.user.id.toString();
} else {
  console.warn("Demo mode: running outside Telegram");
  userId = "demo_user_001";
}


// üìö –•—Ä–∞–Ω–∏–ª–∏—â–µ —Ç–µ–∫—É—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ –∫–Ω–∏–≥ –∏ –∞–∫—Ç–∏–≤–Ω–æ–π –≤–∫–ª–∞–¥–∫–∏
let books = [];
let currentTab = "read";

// üîÅ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ —ç–∫—Ä–∞–Ω–∞ —Å –∫–Ω–∏–≥–∞–º–∏
window.renderMainScreen = async function () {
  books = await getBooks(userId);
  window.books = books;
  const container = document.getElementById("app");
  const filtered = books.filter(b => b.status === currentTab);

  container.innerHTML = `
    <h2>üìò –ú–æ–π –∫–Ω–∏–∂–Ω—ã–π —Ç—Ä–µ–∫–µ—Ä</h2>

    <div class="nav-tabs">
      <div class="nav-tab ${currentTab === 'reading' ? 'active' : ''}" onclick="switchTab('reading')">–ß–∏—Ç–∞—é</div>
      <div class="nav-tab ${currentTab === 'read' ? 'active' : ''}" onclick="switchTab('read')">–ü—Ä–æ—á–∏—Ç–∞–ª</div>
      <div class="nav-tab ${currentTab === 'want_to_read' ? 'active' : ''}" onclick="switchTab('want_to_read')">–•–æ—á—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å</div>
    </div>

    <button onclick="showAddForm()">+ –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–∏–≥—É</button>

    <div id="book-list">
    ${filtered.length > 0 ? filtered.map(renderBookCard).join("") : "<p>üì≠ –ù–µ—Ç –∫–Ω–∏–≥ –≤ —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏</p>"}
    </div>

    <div class="footer-buttons">
      <button id="exportBtn">üì§Export</button>
      <div id="formatMenu" class="hidden">
        <div class="format-option" data-format="csv">CSV</div>
        <div class="format-option" data-format="json">JSON</div>
      </div>
      <button onclick="showStats()">üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</button>
      <button onclick="showSearch()">üîç –ü–æ–∏—Å–∫</button>
    </div>
  `;

  // ‚¨áÔ∏è –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –Ω–∞ –∫–Ω–æ–ø–∫–∏ —ç–∫—Å–ø–æ—Ä—Ç–∞
  document.getElementById("exportBtn").addEventListener("click", () => {
    document.getElementById("formatMenu").classList.toggle("hidden");
  });

  document.querySelectorAll(".format-option").forEach(option => {
    option.addEventListener("click", async () => {
      const format = option.getAttribute("data-format");
      document.getElementById("formatMenu").classList.add("hidden");

// –ë–µ—Ä—ë–º —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ (–µ—Å–ª–∏ –ø—É—Å—Ç–æ ‚Äî –ø–æ–¥—Å—Ç—Ä–∞—Ö—É–µ–º—Å—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–æ–π)
const data = (books && books.length) ? books : await getBooks(userId);
if (!data || !data.length) {
alert("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞");
return;
}

      if (format === "csv") exportToCSV(data);
      if (format === "json") exportToJSON(data);
    });
  });
}


// ‚òëÔ∏è –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏
window.switchTab = function (tab) {
  currentTab = tab;
  renderMainScreen();
};

// üì∑ –ó—É–º –æ–±–ª–æ–∂–∫–∏ (–æ–¥–Ω–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤–º–µ—Å—Ç–æ —Ç—Ä—ë—Ö)
window.showZoom = function (url) {
  const overlay = document.getElementById("zoom-overlay");
  const img = document.getElementById("zoom-image");
  img.src = url;
  overlay.classList.remove("hidden");
};

window.closeZoom = function () {
  document.getElementById("zoom-overlay").classList.add("hidden");
};

// üß© –û—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥–∏ (–æ–±–ª–æ–∂–∫–∞, –Ω–∞–∑–≤–∞–Ω–∏–µ, —Ä–µ–π—Ç–∏–Ω–≥, –¥–∞—Ç—ã –∏ –∑–∞–º–µ—Ç–∫–∞)
function renderBookCard(book) {
  return `
    <div class="book-card" data-book-id="${book.id}">
      <img src="${book.cover_url}" alt="${book.title}" onclick="showZoom('${book.cover_url}')" />

      <div class="info">
        <div class="card-actions-top">
          <button class="icon-btn" onclick="editBook('${book.id}')">‚úèÔ∏è</button>
          <button class="icon-btn" onclick="deleteBook('${book.id}')">üóëÔ∏è</button>
        </div>
        <div class="main-block">
          <b class="book-title multi">${book.title}</b>
          <i class="book-author">${book.author}</i>
          ${book.rating ? `<div class="stars">${renderStars(book.rating)}</div>` : ""}
          ${book.started_at ? `<div>üìñ ${book.started_at}</div>` : ""}
          ${book.finished_at ? `<div>üèÅ ${book.finished_at}</div>` : ""}
          <div class="comment-preview">
            <button onclick="openComment('${book.id}')">üí¨ –ó–∞–º–µ—Ç–∫–∏/–í—ã–≤–æ–¥—ã</button>
          </div>
        </div>
      </div>
    </div>
  `;
}

// ‚≠ê –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤ –≤–∏–¥–µ –∑–≤—ë–∑–¥–æ—á–µ–∫
function renderStars(rating = 0) {
  const fullStar = '‚òÖ';
  const emptyStar = '‚òÜ';
  return [...Array(5)].map((_, i) => i < rating ? fullStar : emptyStar).join('');
}

// üìñ –ü—Ä–æ—Å–º–æ—Ç—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–Ω–∏–≥–∏
window.openBook = function (id) {
  window.prevTabOnOpen = currentTab;   // –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏
  window.lastOpenedBookId = id;               // —á—Ç–æ –æ—Ç–∫—Ä—ã–≤–∞–ª–∏
  const book = books.find(b => String(b.id) === String(id));
  if (!book) { alert("–ö–Ω–∏–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"); return; }

  const container = document.getElementById("app");
  container.innerHTML = `
    <div id="book-list">
      ${renderBookCard(book)}
    </div>

    <div class="footer-buttons" style="margin-top: 12px;">
      <button onclick="focusBookInList('${book.id}')">‚Üê –ù–∞–∑–∞–¥</button>
    </div>
  `;
  // —á—Ç–æ–±—ã –ø–æ—Å–ª–µ –ø–µ—Ä–µ—Ö–æ–¥–∞ –≤—Å—ë –±—ã–ª–æ –≤–∏–¥–Ω–æ
  window.scrollTo({ top: 0, behavior: "instant" });
};



// ‚ûï –ü–æ–∫–∞–∑ —Ñ–æ—Ä–º—ã –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–Ω–∏–≥–∏
window.showAddForm = function() {
  const container = document.getElementById("app");
  container.innerHTML = `
    <h2>‚ûï –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏</h2>
    <form class="add-book-form" onsubmit="submitAddForm(event)">
      <div class="form-block">
        <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏</label>
        <input type="text" id="title" required autocomplete="off" />
        <div id="suggestions" class="suggestions-list"></div>
      </div>

      <div class="form-block">
        <label>–ê–≤—Ç–æ—Ä</label>
        <input type="text" id="author" required />
      </div>

      <div class="form-block">
        <label>–û–±–ª–æ–∂–∫–∞</label>
        <input type="file" id="cover_file" accept="image/*" />
        <input type="url" id="cover_url" placeholder="–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–±–ª–æ–∂–∫—É (–Ω–µ–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ)" />
        <img id="coverPreview" 
             style="
               max-height: 140px;
               max-width: 100%;
               margin-top: 8px;
               display: none;
               object-fit: contain;
               border-radius: 8px;
               box-shadow: 0 2px 6px rgba(0,0,0,0.15);
             " />
      </div>

      <div class="form-block">
        <label>–°—Ç–∞—Ç—É—Å</label>
        <select id="status">
          <option value="want_to_read">–•–æ—á—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å</option>
          <option value="reading">–ß–∏—Ç–∞—é</option>
          <option value="read">–ü—Ä–æ—á–∏—Ç–∞–ª</option>
        </select>
      </div>

      <div class="form-block">
        <label>–û—Ü–µ–Ω–∫–∞</label>
        <select id="rating">
          <option value="">–ë–µ–∑ –æ—Ü–µ–Ω–∫–∏</option>
          ${[1, 2, 3, 4, 5].map(n => `<option value="${n}">‚≠ê ${n}</option>`).join("")}
        </select>
      </div>

      <div class="form-block date-group">
        <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
        <input type="date" id="started_at" />
        <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
        <input type="date" id="finished_at" />
      </div>

      <div class="form-buttons">
        <button type="submit" class="save-btn">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button type="button" class="back-btn" onclick="renderMainScreen()">‚Üê –ù–∞–∑–∞–¥</button>
      </div>
    </form>
  `;

  // üîç –ê–≤—Ç–æ–ø–æ–∏—Å–∫ –∫–Ω–∏–≥
  document.getElementById("title").addEventListener("input", handleBookSearch);

  // üì∑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
  document.getElementById("cover_file").addEventListener("change", (e) => {
    const file = e.target.files[0];
    if (file) {
      const preview = document.getElementById("coverPreview");
      preview.src = URL.createObjectURL(file);
      preview.style.display = "block";
    }
  });

  // üì∑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ URL
  document.getElementById("cover_url").addEventListener("input", (e) => {
    const url = e.target.value.trim();
    const preview = document.getElementById("coverPreview");
    if (url) {
      preview.src = url;
      preview.style.display = "block";
    } else {
      preview.style.display = "none";
    }
  });

  // –î–∞—Ç–∞ –ü—Ä–æ—á—Ç–µ–Ω–∏—è
  document.getElementById("status").addEventListener("change", () => {
  const status = document.getElementById("status").value;
  const finishedInput = document.getElementById("finished_at");

  if (status === "read" && !finishedInput.value) {
    const today = new Date().toISOString().split("T")[0];
    finishedInput.value = today;
  }
});
};

// ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–π –∫–Ω–∏–≥–∏
window.submitAddForm = async function (e) {
  e.preventDefault();
  const tgUser = Telegram.WebApp.initDataUnsafe?.user || {};

  let coverUrl = document.getElementById("cover_url").value.trim();
  const file = document.getElementById("cover_file").files[0];
  if (file) {
    coverUrl = await uploadCover(file);
    if (!coverUrl) {
      alert("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–±–ª–æ–∂–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.");
      return;
    }
  }

  const status = document.getElementById("status").value;
  const startedAt = document.getElementById("started_at").value || null;
  let finishedAt = document.getElementById("finished_at").value || null;

  if (status === "read" && !finishedAt) {
    finishedAt = new Date().toISOString().split("T")[0];
  }

  const ratingValue = document.getElementById("rating").value;

  // üîπ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è
  const normalize = (str) =>
    str.trim().replace(/\s+/g, " ").toLowerCase();

  const normalizeAuthor = (str) =>
    normalize(str).split(" ").sort().join(" ");

  const title = document.getElementById("title").value.trim();
  const author = document.getElementById("author").value.trim();

  const normTitle = normalize(title);
  const normAuthor = normalizeAuthor(author);

  const book = {
    id: crypto.randomUUID(),
    user_id: userId,
    username: tgUser?.username || "",
    user_first_name: tgUser?.first_name || "",
    title,
    author,
    cover_url: coverUrl || "",
    status,
    rating: ratingValue ? Number(ratingValue) : null,
    added_at: new Date().toISOString().split("T")[0],
    started_at: startedAt,
    finished_at: finishedAt
  };

  // üìå –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤ books_library –±–µ–∑ –¥—É–±–ª–µ–π
await checkAndInsertLibraryBook(title, author, coverUrl);

  // üìå –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–∏–≥—É –≤ —Ç—Ä–µ–∫–µ—Ä
  await addBook(book);
  currentTab = book.status;
  renderMainScreen();
};

// ‚úèÔ∏è –ê–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π –∫–Ω–∏–≥–∏
async function handleBookSearch(e) {
  const value = e.target.value.trim();
  const list = document.getElementById("suggestions");
  list.innerHTML = "";
  if (value.length < 4) return;

  const suggestions = await searchBooks(value);
  list.innerHTML = suggestions.map(
    book => `<div class="suggestion-item" onclick="selectBook('${book.title}', '${book.author}', '${book.cover_url || ""}')">${book.title} ‚Äî ${book.author}</div>`
  ).join("");
}

window.selectBook = function(title, author, coverUrl) {
  document.getElementById("title").value = title;
  document.getElementById("author").value = author;
  if (coverUrl) {
    document.getElementById("coverPreview").src = coverUrl;
    document.getElementById("coverPreview").style.display = "block";
    document.getElementById("cover_url").value = coverUrl;
  }
  document.getElementById("suggestions").innerHTML = "";
};

// ‚úèÔ∏è –ü–æ–∫–∞–∑ —Ñ–æ—Ä–º—ã —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–Ω–∏–≥–∏
window.editBook = function(id) {
  const book = books.find(b => b.id === id);
  const container = document.getElementById("app");

  container.innerHTML = `
    <h2>‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏</h2>
    <form id="editForm" class="add-book-form">

      <div class="form-block">
        <label>–ù–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏</label>
        <input type="text" id="title" value="${book.title}" required />
      </div>

      <div class="form-block">
        <label>–ê–≤—Ç–æ—Ä</label>
        <input type="text" id="author" value="${book.author}" required />
      </div>

      <div class="form-block">
        <label>–û–±–ª–æ–∂–∫–∞</label>
        <input type="file" id="cover_file" accept="image/*" />
        <input type="url" id="cover_url" value="${book.cover_url || ''}" />
        <img id="coverPreview" 
             src="${book.cover_url || ''}" 
             style="
               max-height: 140px;
               max-width: 100%;
               margin-top: 8px;
               ${book.cover_url ? '' : 'display:none;'}
               object-fit: contain;
               border-radius: 8px;
               box-shadow: 0 2px 6px rgba(0,0,0,0.15);
             " />
      </div>

      <div class="form-block">
        <label>–°—Ç–∞—Ç—É—Å</label>
        <select id="status">
          <option value="want_to_read" ${book.status === 'want_to_read' ? 'selected' : ''}>–•–æ—á—É –ø—Ä–æ—á–∏—Ç–∞—Ç—å</option>
          <option value="reading" ${book.status === 'reading' ? 'selected' : ''}>–ß–∏—Ç–∞—é</option>
          <option value="read" ${book.status === 'read' ? 'selected' : ''}>–ü—Ä–æ—á–∏—Ç–∞–ª</option>
        </select>
      </div>

      <div class="form-block">
        <label>–û—Ü–µ–Ω–∫–∞</label>
        <select id="rating">
          <option value="">–ë–µ–∑ –æ—Ü–µ–Ω–∫–∏</option>
          ${[1,2,3,4,5].map(n => `<option value="${n}" ${book.rating === n ? 'selected' : ''}>‚≠ê ${n}</option>`).join("")}
        </select>
      </div>

      <div class="form-block date-group">
        <label>–î–∞—Ç–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è</label>
        <input type="date" id="added_at" value="${book.added_at || ''}" />
        <label>–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞</label>
        <input type="date" id="started_at" value="${book.started_at || ''}" />
        <label>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è</label>
        <input type="date" id="finished_at" value="${book.finished_at || ''}" />
      </div>

      <div class="form-buttons">
        <button type="submit" class="save-btn">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
        <button type="button" class="back-btn" id="backBtn">‚Üê –ù–∞–∑–∞–¥</button>
      </div>
    </form>
  `;

  // üì∑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ñ–∞–π–ª–∞
  document.getElementById("cover_file").addEventListener("change", (e) => {
    const file = e.target.files[0];
    const preview = document.getElementById("coverPreview");
    if (file) {
      preview.src = URL.createObjectURL(file);
      preview.style.display = "block";
    }
  });

  // üì∑ –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–∏ –≤–≤–æ–¥–µ URL
  document.getElementById("cover_url").addEventListener("input", (e) => {
    const url = e.target.value.trim();
    const preview = document.getElementById("coverPreview");
    if (url) {
      preview.src = url;
      preview.style.display = "block";
    } else {
      preview.style.display = "none";
    }
  });
  
  // –î–∞—Ç–∞ –ü—Ä–æ—á—Ç–µ–Ω–∏—è
  document.getElementById("status").addEventListener("change", () => {
  const status = document.getElementById("status").value;
  const finishedInput = document.getElementById("finished_at");

  if (status === "read" && !finishedInput.value) {
    const today = new Date().toISOString().split("T")[0];
    finishedInput.value = today;
  }
});


  // –ù–∞–∑–∞–¥
  document.getElementById("backBtn").addEventListener("click", renderMainScreen);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
  document.getElementById("editForm").addEventListener("submit", async function(e) {
    e.preventDefault();

    let coverUrl = document.getElementById("cover_url").value.trim();
    const file = document.getElementById("cover_file").files[0];
    if (file) {
      coverUrl = await uploadCover(file);
    }

    const updated = {
      title: document.getElementById("title").value.trim(),
      author: document.getElementById("author").value.trim(),
      cover_url: coverUrl,
      status: document.getElementById("status").value,
      rating: document.getElementById("rating").value ? Number(document.getElementById("rating").value) : null,
      comment: book.comment,
      added_at: document.getElementById("added_at").value || null,
      started_at: document.getElementById("started_at").value || null,
      finished_at: document.getElementById("finished_at").value || null
    };

    await updateBook(id, updated);
await focusBookInList(book.id || window.lastOpenedBookId); 
  });
};


// üóë –£–¥–∞–ª–µ–Ω–∏–µ –∫–Ω–∏–≥–∏
window.deleteBook = async function(id) {
  const book = books.find(b => b.id === id);
  const confirmDelete = confirm("–£–¥–∞–ª–∏—Ç—å —ç—Ç—É –∫–Ω–∏–≥—É? –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å.");
  if (!confirmDelete) return;

  // —É–¥–∞–ª—è–µ–º –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤
if (book?.comment) {
  const images = (book.comment.match(/https?:\/\/[^\s)]+/g) || []).filter(url =>
    url.includes("/comments/")
  );

  for (const imgUrl of images) {
    await deleteCommentImage(imgUrl);
  }
}


  // —É–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å –∏–∑ –±–∞–∑—ã
await deleteBook(id);
  
alert("üóë –ö–Ω–∏–≥–∞ —É–¥–∞–ª–µ–Ω–∞");
  await renderMainScreen();
};


// üìä –ü—Ä–æ—Å—Ç–µ–π—à–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Å—è—Ü–∞–º (—Å–∫–æ–ª—å–∫–æ –∫–Ω–∏–≥ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –≤ –º–µ—Å—è—Ü)
window.showStats = function () {
  const container = document.getElementById("app");

  // –ë–µ—Ä—ë–º –∏–∑ —É–∂–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –º–∞—Å—Å–∏–≤–∞ books —Ç–æ–ª—å–∫–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã–µ
  const finished = books
    .filter(b => b.finished_at)
    .map(b => b.finished_at.slice(0, 7)); // 'YYYY-MM'

  // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞: { '2025-01': 3, ... }
  const byMonth = finished.reduce((acc, ym) => {
    acc[ym] = (acc[ym] || 0) + 1;
    return acc;
  }, {});

  // –ü—Ä–µ–≤—Ä–∞—Ç–∏–º –≤ –º–∞—Å—Å–∏–≤ –∏ –æ—Ç—Å–æ—Ä—Ç–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–µ
  const rows = Object.entries(byMonth).sort((a, b) => a[0].localeCompare(b[0]));

  // –ú–∞–∫—Å–∏–º—É–º –¥–ª—è ¬´–±–∞—Ä–æ–≤¬ª
  const max = rows.length ? Math.max(...rows.map(([, n]) => n)) : 0;

  container.innerHTML = `
    <h2>üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —á—Ç–µ–Ω–∏—è</h2>
    ${rows.length ? `
      <div style="display:flex; flex-direction:column; gap:8px;">
        ${rows.map(([ym, n]) => {
          const width = max ? Math.round((n / max) * 100) : 0;
          return `
            <div style="display:flex; align-items:center; gap:8px;">
              <div style="width:90px; font-family:monospace;">${ym}</div>
              <div style="flex:1; background:#eee; border-radius:6px; height:12px; overflow:hidden;">
                <div style="width:${width}%; height:100%; background:#007aff;"></div>
              </div>
              <div style="width:28px; text-align:right;">${n}</div>
            </div>
          `;
        }).join("")}
      </div>
    ` : `<p>–ü–æ–∫–∞ –Ω–µ—Ç –∑–∞–≤–µ—Ä—à—ë–Ω–Ω—ã—Ö –∫–Ω–∏–≥ ‚Äî –Ω–µ—á–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç—å.</p>`}

    <div class="footer-buttons">
      <button onclick="renderMainScreen()">‚Üê –ù–∞–∑–∞–¥</button>
    </div>
  `;
};





// üîç –í–∫–ª–∞–¥–∫–∞ "–ü–æ–∏—Å–∫" ‚Äî —Ç–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫–∞ + –∞–≤—Ç–æ–¥–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ –ª–æ–∫–∞–ª—å–Ω—ã–º –∫–Ω–∏–≥–∞–º
window.showSearch = async function () {
  const container = document.getElementById("app");

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–Ω–∏–≥–∏ 1 —Ä–∞–∑, –µ—Å–ª–∏ –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã
  if (!window.books || window.books.length === 0) {
    window.books = await getBooks(userId);
  }

  container.innerHTML = `
    <h2>üîç –ü–æ–∏—Å–∫</h2>

    <div id="searchWrap" style="position:relative; margin-bottom:12px;">
      <input id="searchInput" placeholder="–ù–∞—á–Ω–∏ –≤–≤–æ–¥–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∏–ª–∏ –∞–≤—Ç–æ—Ä–∞‚Ä¶" autocomplete="off"
        style="width:100%; padding:10px 12px; border-radius:8px; border:1px solid #ccc; outline:none;" />

      <div id="typeahead"
        style="position:absolute; z-index:1000; top:100%; left:0; right:0;
               background:#fff; border:1px solid #ddd; border-top:none; border-radius:0 0 8px 8px;
               max-height:280px; overflow-y:auto; display:none; box-shadow:0 8px 24px rgba(0,0,0,.06);">
      </div>
    </div>

    <div class="footer-buttons">
      <button onclick="renderMainScreen()">‚Üê –ù–∞–∑–∞–¥</button>
    </div>
  `;

  const input = document.getElementById("searchInput");
  const dd    = document.getElementById("typeahead");

  // ---------- utils ----------
  const norm = (s) => (s ?? "").toString().toLowerCase().replaceAll("—ë","–µ").trim();
  const esc  = (s="") => s.replace(/[&<>"']/g, m => ({'&':'&amp;','<':'&lt;','>':'&gt;','"':'&quot;',"'":'&#39;'}[m]));
  function highlight(text, q) {
    const base = esc(text || "");
    const terms = norm(q).split(/\s+/).filter(Boolean);
    if (!terms.length) return base;
    const pattern = terms.map(t => t.replace(/[.*+?^${}()|[\]\\]/g,'\\$&')).join("|");
    return base.replace(new RegExp(`(${pattern})`, "gi"), "<mark>$1</mark>");
  }

  // –ü–æ–∏—Å–∫ –ø–æ title+author(+category/note/tags) c AND-–ª–æ–≥–∏–∫–æ–π; —Ç–æ–ø-10
  function searchLocal(q) {
    const terms = norm(q).split(/\s+/).filter(Boolean);
    if (!terms.length) return [];

    return window.books
      .map(b => {
        const hay = norm([b.title, b.author, b.category, b.note, Array.isArray(b.tags)? b.tags.join(" "):""].join("  "));
        const ok = terms.every(t => hay.includes(t));
        if (!ok) return null;

        // –ø—Ä–æ—Å—Ç–∞—è —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: —Ä–∞–Ω—å—à–µ –≤—Ö–æ–∂–¥–µ–Ω–∏–µ –≤ title ‚Äî –≤—ã—à–µ
        const idxTitle  = norm(b.title || "").indexOf(norm(q));
        const idxAuthor = norm(b.author || "").indexOf(norm(q));
        const score = (idxTitle === -1 ? 1000 : idxTitle) + (idxAuthor === -1 ? 500 : idxAuthor);
        return { b, score };
      })
      .filter(Boolean)
      .sort((a,b) => a.score - b.score)
      .slice(0, 10)
      .map(x => x.b);
  }

  // ---------- dropdown render + –ø–æ–≤–µ–¥–µ–Ω–∏–µ ----------
  let suggestions = [];
  let active = -1; // –∏–Ω–¥–µ–∫—Å –ø–æ–¥—Å–≤–µ—á–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞

  function hideDD() { dd.style.display = "none"; active = -1; }
  function showDD() { dd.style.display = suggestions.length ? "block" : "none"; }

  function renderDD(q) {
    if (!suggestions.length) {
      dd.innerHTML = `<div style="padding:10px 12px; color:#777;">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>`;
      dd.style.display = "block";
      return;
    }
    dd.innerHTML = suggestions.map((b, i) => `
      <div class="ta-item" data-id="${b.id}"
           style="display:flex; gap:10px; align-items:center; padding:10px 12px; cursor:pointer;
                  ${i===active ? 'background:#f5f7ff;' : ''}">
        ${b.cover_url ? `<img src="${esc(b.cover_url)}" alt="" style="width:32px;height:48px;object-fit:cover;border-radius:4px;border:1px solid #eee;">` : ''}
        <div style="min-width:0;">
          <div style="font-weight:600; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
            ${highlight(b.title, q)}
          </div>
          <div style="font-size:12px; opacity:.8; white-space:nowrap; overflow:hidden; text-overflow:ellipsis;">
            ${highlight(b.author || "", q)}
          </div>
        </div>
      </div>
    `).join("");

    // –∫–ª–∏–∫–∏ –ø–æ –ø—É–Ω–∫—Ç–∞–º
    dd.querySelectorAll(".ta-item").forEach((el, i) => {
      el.addEventListener("mouseenter", () => { active = i; paintActive(); });
      el.addEventListener("mousedown", (e) => { // mousedown, —á—Ç–æ–±—ã –Ω–µ –ø–æ—Ç–µ—Ä—è—Ç—å —Ñ–æ–∫—É—Å –¥–æ click
        e.preventDefault();
        const id = el.getAttribute("data-id");
        if (typeof openBook === "function") openBook(id);
      });
    });

    showDD();
  }

  function paintActive() {
    [...dd.children].forEach((el, i) => {
      el.style.background = (i===active) ? "#f5f7ff" : "";
    });
  }

  const debouncedSearch = (fn => {
    let t; return (...args) => { clearTimeout(t); t = setTimeout(() => fn(...args), 180); };
  })(q => {
    if (q.length < 2) { hideDD(); return; }
    suggestions = searchLocal(q);
    active = suggestions.length ? 0 : -1;
    renderDD(q);
    paintActive();
  });

  // ---------- handlers ----------
  input.addEventListener("input", (e) => debouncedSearch(e.target.value));
  input.addEventListener("focus", () => {
    if (input.value.trim().length >= 2) { suggestions = searchLocal(input.value); renderDD(input.value); paintActive(); }
  });
  input.addEventListener("keydown", (e) => {
    const q = input.value.trim();
    if (e.key === "ArrowDown") {
      if (!suggestions.length) return;
      e.preventDefault();
      active = (active + 1) % suggestions.length; paintActive();
      dd.children[active]?.scrollIntoView({ block: "nearest" });
    }
    if (e.key === "ArrowUp") {
      if (!suggestions.length) return;
      e.preventDefault();
      active = (active - 1 + suggestions.length) % suggestions.length; paintActive();
      dd.children[active]?.scrollIntoView({ block: "nearest" });
    }
    if (e.key === "Enter") {
      if (active >= 0 && suggestions[active]) {
        e.preventDefault();
        const id = suggestions[active].id;
        if (typeof openBook === "function") openBook(id);
      }
    }
    if (e.key === "Escape") {
      input.value = "";
      hideDD();
    }
  });

  // –∫–ª–∏–∫ –≤–Ω–µ ‚Äî –∑–∞–∫—Ä—ã—Ç—å —Å–ø–∏—Å–æ–∫
  document.addEventListener("click", (e) => {
    if (!document.getElementById("searchWrap")) return; // —ç–∫—Ä–∞–Ω —Å–º–µ–Ω–∏–ª–∏
    if (!document.getElementById("searchWrap").contains(e.target)) hideDD();
  }, { capture: true });
};

window.lastOpenedBookId = null;

window.focusBookInList = async function (bookId) {
  // –æ–±–Ω–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ (–Ω–∞ —Å–ª—É—á–∞–π —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è)
  books = await getBooks(userId);

  // üëâ —Å–ª—É—á–∞–π —É–¥–∞–ª–µ–Ω–∏—è –∏–ª–∏ ¬´–ø—Ä–æ—Å—Ç–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è¬ª
  if (!bookId) {
    if (window.prevTabOnOpen) window.currentTab = window.prevTabOnOpen; // –≤–µ—Ä–Ω—É—Ç—å—Å—è —Ç—É–¥–∞, –æ—Ç–∫—É–¥–∞ –ø—Ä–∏—à–ª–∏
    await renderMainScreen();
    window.prevTabOnOpen = null;
    return;
  }

  // üëâ –æ–±—ã—á–Ω—ã–π —Å–ª—É—á–∞–π: –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ –∫–Ω–∏–≥–µ, –ø–µ—Ä–µ–∫–ª—é—á–∏–≤ –≤–∫–ª–∞–¥–∫—É –ø–æ –µ—ë –∞–∫—Ç—É–∞–ª—å–Ω–æ–º—É —Å—Ç–∞—Ç—É—Å—É
  const book = books.find(b => String(b.id) === String(bookId));
  await renderMainScreen(); // –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π –æ—Ç—Ä–∏—Å—É–µ–º, –µ—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ –∫–Ω–∏–≥—É
  if (!book) return;

  currentTab = book.status || currentTab;
  await renderMainScreen();

  // –ø–æ–¥—Å–≤–µ—Ç–∫–∞ –∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–∞ –∫ –∫–Ω–∏–≥–µ
  await new Promise(r => requestAnimationFrame(() => requestAnimationFrame(r)));
  const el = document.querySelector(`[data-book-id="${bookId}"]`);
  if (el) {
    el.classList.add('book-focus');
    el.scrollIntoView({ block: 'center', behavior: 'smooth' });
    setTimeout(() => el.classList.remove('book-focus'), 1600);
  }
};

  





  // ‚úÖ –ñ—ë—Å—Ç–∫–∏–π –Ω–∞–±–æ—Ä –∫–æ–ª–æ–Ω–æ–∫ –∏ –ø–æ—Ä—è–¥–æ–∫
const EXPORT_COLS = [
  { key: 'title',       label: '–ù–∞–∑–≤–∞–Ω–∏–µ',   get: b => b.title ?? '' },
  { key: 'author',      label: '–ê–≤—Ç–æ—Ä',      get: b => b.author ?? '' },
  { key: 'status',      label: '–°—Ç–∞—Ç—É—Å',     get: b => b.status ?? '' },
  { key: 'rating',      label: '–û—Ü–µ–Ω–∫–∞',     get: b => b.rating ?? '' },
  { key: 'started_at',  label: '–ù–∞—á–∞–ª',      get: b => b.started_at ?? '' },
  { key: 'finished_at', label: '–ó–∞–∫–æ–Ω—á–∏–ª',   get: b => b.finished_at ?? '' },
  { key: 'comment',     label: '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π',get: b => (b.comment ?? '').replace(/\r?\n/g,' ') },
  // –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –¥–æ–±–∞–≤—å: category, tags, added_at –∏ —Ç.–¥.
];
// üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤ CSV/JSON
  
function escapeCsv(v) {
  return `"${String(v ?? '').replace(/"/g,'""')}"`;
}
async function exportToCSV(data) {
  if (!data?.length) { alert("–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —ç–∫—Å–ø–æ—Ä—Ç–∞"); return; }
  const header = EXPORT_COLS.map(c => c.label);
  const rows = data.map(b => EXPORT_COLS.map(c => escapeCsv(c.get(b))));
  const bom = "\uFEFF";
  const csvContent = bom + [header.join(','), ...rows.map(r => r.join(','))].join('\n');
  await uploadAndShare(csvContent, `books-${userId}.csv`, 'text/csv');
}

async function exportToJSON(data) {
  const slim = (data ?? []).map(b =>
    Object.fromEntries(EXPORT_COLS.map(c => [c.key, c.get(b)]))
  );
  const jsonContent = JSON.stringify(slim, null, 2);
  await uploadAndShare(jsonContent, `books-${userId}.json`, 'application/json');
}

// ‚òÅÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞ (Telegram-friendly)
async function uploadAndShare(content, filename, type) {
  const ts = new Date().toISOString().replace(/[:.]/g, "-");
  const finalName = filename.replace(/(\.\w+)$/, `-${ts}$1`);
  const blob = new Blob([content], { type: `${type}; charset=utf-8` });

  // üëá —Ç–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è: —Ç–µ–ø–µ—Ä—å —Å–∏–≥–Ω–∞—Ç—É—Ä–∞ uploadExportFile(userId, ...)
  const publicUrl = await uploadExport(userId, finalName, blob, type);
  if (!publicUrl) {
    alert("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —ç–∫—Å–ø–æ—Ä—Ç–µ —Ñ–∞–π–ª–∞");
    return;
  }

  // —Ñ–æ—Ä—Å-—Å–∫–∞—á–∏–≤–∞–Ω–∏–µ
  const dlUrl = publicUrl + (publicUrl.includes("?") ? "&" : "?") +
                "download=" + encodeURIComponent(finalName);

  // üîë –ö–õ–Æ–ß–ï–í–û–ï: –Ω–∞ –º–æ–±–∏–ª–∫–∞—Ö –æ—Ç–∫—Ä—ã–≤–∞–µ–º –≤–Ω–µ—à–Ω–∏–º –±—Ä–∞—É–∑–µ—Ä–æ–º
  const tg = window.Telegram?.WebApp;
  if (tg?.openLink) {
    tg.openLink(dlUrl); // –æ—Ç–∫—Ä–æ–µ—Ç Safari/Chrome —Å –Ω–æ—Ä–º–∞–ª—å–Ω—ã–º –¥–∏–∞–ª–æ–≥–æ–º —Å–∫–∞—á–∏–≤–∞–Ω–∏—è
  } else {
    // –¥–µ—Å–∫—Ç–æ–ø/–æ–±—ã—á–Ω—ã–π –±—Ä–∞—É–∑–µ—Ä
    window.open(dlUrl, "_blank", "noopener,noreferrer");
  }
}


renderMainScreen();

// üì∏ –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ Supabase Storage –ø–æ URL
async function deleteImageFromSupabase(imageUrl) {
  try {
    if (!imageUrl.includes("/comments/")) return;

    const fileName = decodeURIComponent(imageUrl.split("/").pop());
    await deleteImageFromStorage("comments", fileName);
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è:", err);
  }
}

// üí¨ –û—Ç–∫—Ä—ã—Ç–∏–µ/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è –∫ –∫–Ω–∏–≥–µ —á–µ—Ä–µ–∑ Toast UI Editor
window.openComment = function(bookId, readonly = true) {
  const book = books.find(b => b.id === bookId);
  const container = document.getElementById("app");

  container.innerHTML = `
    <h2>üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–Ω–∏–≥–µ</h2>
    <b>${book.title}</b> <i>(${book.author})</i><br/><br/>
    <div id="toastEditor"></div>

    <div class="comment-actions">
      ${readonly
        ? `<button onclick="openComment('${bookId}', false)">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>`
        : `<button onclick="saveComment('${book.id}')">üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>`
      }
      <button onclick="renderMainScreen()">‚Üê –ù–∞–∑–∞–¥</button>
    </div>
  `;

  if (readonly) {
    toastui.Editor.factory({
      el: document.querySelector('#toastEditor'),
      viewer: true,
      initialValue: book.comment || "–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω."
    });
  } else {
window.toastEditor = new toastui.Editor({
  el: document.querySelector('#toastEditor'),
  height: '400px',
  language: 'ru',
  initialEditType: 'wysiwyg',
  previewStyle: 'vertical',
  initialValue: book.comment || "",
  toolbarItems: [
    ['heading', 'bold', 'italic', 'strike'],
    ['hr', 'quote'],
    ['ul', 'ol', 'task'],
    ['table', 'link', 'image'],
    // üëâ –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ Undo/Redo
    [{
      name: 'undo',
      tooltip: '–û—Ç–º–µ–Ω–∏—Ç—å',
      className: 'toastui-editor-toolbar-icons undo',
      command: 'undo',
      text: '‚Ü©Ô∏è'
    },
    {
      name: 'redo',
      tooltip: '–ü–æ–≤—Ç–æ—Ä–∏—Ç—å',
      className: 'toastui-editor-toolbar-icons redo',
      command: 'redo',
      text: '‚Ü™Ô∏è'
    }]
  ],
  hooks: {
    addImageBlobHook: async (blob, callback) => {
      const url = await uploadCommentImage(blob);
      callback(url, '–∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ');
    }
  }
});


    // üí° –ö–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –ø–æ–∑–∏—Ü–∏–∏ –≤—Å–ø–ª—ã–≤–∞—é—â–∏—Ö –æ–∫–æ–Ω
    const fixPopupPosition = () => {
      const popups = document.querySelectorAll('.toastui-editor-popup');
      popups.forEach(popup => {
        const rect = popup.getBoundingClientRect();
if (rect.left < 0 || rect.right > window.innerWidth) {
  const shift = Math.min(Math.abs(rect.left), rect.right - window.innerWidth);
  popup.style.transform = `translateX(${-shift - 12}px)`;
}

      });
    };

    const observer = new MutationObserver(() => fixPopupPosition());
    observer.observe(document.body, { childList: true, subtree: true });

    // —Ç–∞–∫–∂–µ –≤—ã–∑—ã–≤–∞–µ–º —á–µ—Ä–µ–∑ timeout (–Ω–∞ —Å–ª—É—á–∞–π –ø—Ä–æ–ø—É—Å–∫–∞ –º—É—Ç–∞—Ü–∏–∏)
  setTimeout(fixPopupPosition, 300);
  setTimeout(fixPopupPosition, 800); // —Ä–µ–∑–µ—Ä–≤–Ω—ã–π –≤—ã–∑–æ–≤
  }
};


// —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è
window.saveComment = async function(bookId) {
  const book = books.find(b => b.id === bookId);
  const oldComment = book?.comment || "";
  const newComment = toastEditor.getMarkdown();

  // –Ω–∞—Ö–æ–¥–∏–º —É–¥–∞–ª—ë–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
  const oldImages = (oldComment.match(/https?:\/\/[^\s)]+/g) || []).filter(url => url.includes("/comments/"));
  const newImages = (newComment.match(/https?:\/\/[^\s)]+/g) || []).filter(url => url.includes("/comments/"));
  const removedImages = oldImages.filter(url => !newImages.includes(url));

  // —É–¥–∞–ª—è–µ–º –∏—Ö –∏–∑ storage
  for (const imgUrl of removedImages) {
    await deleteImageFromSupabase(imgUrl);
  }

  // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
await saveComment(bookId, userId, newComment);
 
  renderMainScreen();
};

